@charset "UTF-8";

@mixin lg-compound($first, $rest...) {
    $prefixes: '-webkit-';

    // 出力用の変数
    $direction: false;
    $legacy_direction: false;
    $colorstops: false;
    
    // $first が color → 方向がない → パート1
    @if type-of($first) == 'color' {
        // direction って名前よくないね
        $direction: $first;
        $legacy_direction: $first;
        $colorstops: $rest;
    }
    // $first がリスト → キーワードかも → パート2
    @else if type-of($first) == 'list' {
        $keywords_map: (
            to bottom:       top,
            to left:         right,
            to top:          bottom,
            to right:        left,
            to top left:     bottom right,
            to top right:    bottom left,
            to bottom right: top left,
            to bottom left:  top right,
            to left top:     right bottom,
            to right top:    left bottom,
            to right bottom: left top,
            to left bottom:  right top
            );
        
        @if map-has-key($keywords_map, $keyword) {
            $direction: $first;
            $legacy_direction: map-get($keywords_map, $keyword);
            $colorstops: $rest;
        }
    }
    // $first が number → 角度かも
    @else if type-of($first) == 'number' {
        // unit() 関数で角度 (deg) かを確認
        // deg の場合 → パート3
        @if unit($first) == 'deg' {
            $direction: $first;
            $legacy_direction: (450 - $first) % 360;
            $colorstops: $rest;
        }
    }
    // それ以外はエラー
    @else { @warn 'エラーですよん'; }
    
    // カラーストップが確認できたら出力
    @if ($colorstops) {
        @each $prefix in $prefixes {
            background-image: #{$prefix}linear-gradient(
                $legacy_direction, $colorstops);
        }
        background-image: linear-gradient($direction, $colorstops);
    }
}